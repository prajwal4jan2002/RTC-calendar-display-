#include "ds3231.h"

static uint8_t BCD2DEC(uint8_t val) { return (val >> 4) * 10 + (val & 0x0F); }
static uint8_t DEC2BCD(uint8_t val) { return ((val / 10) << 4) | (val % 10); }

void DS3231_GetTime(I2C_HandleTypeDef *hi2c, DS3231_Time *time) {
    uint8_t data[7];
    HAL_I2C_Mem_Read(hi2c, DS3231_ADDRESS, 0x00, I2C_MEMADD_SIZE_8BIT, data, 7, HAL_MAX_DELAY);
    time->seconds = BCD2DEC(data[0]);
    time->minutes = BCD2DEC(data[1]);
    time->hours   = BCD2DEC(data[2]);
    time->day     = BCD2DEC(data[3]);
    time->date    = BCD2DEC(data[4]);
    time->month   = BCD2DEC(data[5]);
    time->year    = 2000 + BCD2DEC(data[6]);
}

void DS3231_SetTime(I2C_HandleTypeDef *hi2c, DS3231_Time *time) {
    uint8_t data[7];
    data[0] = DEC2BCD(time->seconds);
    data[1] = DEC2BCD(time->minutes);
    data[2] = DEC2BCD(time->hours);
    data[3] = DEC2BCD(time->day);
    data[4] = DEC2BCD(time->date);
    data[5] = DEC2BCD(time->month);
    data[6] = DEC2BCD(time->year - 2000);
    HAL_I2C_Mem_Write(hi2c, DS3231_ADDRESS, 0x00, I2C_MEMADD_SIZE_8BIT, data, 7, HAL_MAX_DELAY);
}
